# Test Configuration for Mirror Test
# This file contains default sources for various distributions
# Generated for testing purposes

# Global variables
variables:
  # Debian mirror (use archive.debian.org for older versions)
  DEBIAN_MIRROR: "deb.debian.org"
  DEBIAN_ARCHIVE_MIRROR: "archive.debian.org"
  DEBIAN_BASE: "http://${DEBIAN_MIRROR}"
  DEBIAN_ARCHIVE_BASE: "http://${DEBIAN_ARCHIVE_MIRROR}"
  DEBIAN_PATH: "/debian"

  # Ubuntu mirror (use old-releases.ubuntu.com for older versions)
  UBUNTU_MIRROR: "archive.ubuntu.com"
  UBUNTU_OLD_MIRROR: "old-releases.ubuntu.com"
  UBUNTU_BASE: "http://${UBUNTU_MIRROR}"
  UBUNTU_OLD_BASE: "http://${UBUNTU_OLD_MIRROR}"
  UBUNTU_PATH: "/ubuntu"

  # Rocky Linux mirror
  ROCKY_MIRROR: "download.rockylinux.org"
  ROCKY_BASE: "http://${ROCKY_MIRROR}/pub"
  ROCKY_PATH: "/rocky"

  # Common settings
  GPG_CHECK: "0"

# Package manager configurations
package-managers:
  apt:
    update-command: "apt-get update"
    test-commands:
      - "apt-get install -y --no-install-recommends apt-utils"
      - "apt-get install -y --no-install-recommends build-essential"
      - "gcc --version"
      - "echo 'APT test successful'"

  dnf:
    update-command: "dnf makecache"
    test-commands:
      - "dnf install -y dnf-utils"
      - "dnf install -y gcc make"
      - "gcc --version"
      - "echo 'DNF test successful'"

# Distribution configurations
distributions:
  # ----------------------------------------------------------------------------
  # Debian Distributions
  # ----------------------------------------------------------------------------

  debian-7:
    base-image: debian:7
    package-manager: apt
    sources:
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} wheezy main contrib non-free"
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} wheezy-backports main contrib non-free"
    test-commands:
      - "apt-get install -y --allow-unauthenticated --no-install-recommends apt-utils"
      - "apt-get install -y --allow-unauthenticated --no-install-recommends build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Debian 7 repositories validated'"

  debian-8:
    base-image: debian:8
    package-manager: apt
    sources:
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} jessie main contrib non-free"
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} jessie-backports main contrib non-free"
    test-commands:
      - "apt-get update -y --force-yes --allow-unauthenticated"
      - "apt-get upgrade -y --force-yes --allow-unauthenticated"
      - "echo '[SUCCESS] Debian 8 repositories validated'"

  debian-9:
    base-image: debian:9
    package-manager: apt
    sources:
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} stretch main contrib non-free"
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} stretch-backports main contrib non-free"
    test-commands:
      - "apt-get install -y --no-install-recommends --allow-unauthenticated apt-utils"
      - "apt-get install -y --no-install-recommends --allow-unauthenticated build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Debian 9 repositories validated'"

  debian-10:
    base-image: debian:10
    package-manager: apt
    sources:
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} buster main contrib non-free"
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} buster-updates main contrib non-free"
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} buster-backports main contrib non-free"
    test-commands:
      - "apt-get install -y --no-install-recommends --allow-unauthenticated apt-utils"
      - "apt-get install -y --no-install-recommends --allow-unauthenticated build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Debian 10 repositories validated'"

  debian-11:
    base-image: debian:11
    package-manager: apt
    sources:
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} bullseye main contrib non-free"
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} bullseye-updates main contrib non-free"
      - "deb ${DEBIAN_ARCHIVE_BASE}${DEBIAN_PATH} bullseye-backports main contrib non-free"
    test-commands:
      - "apt-get install -y --no-install-recommends apt-utils"
      - "apt-get install -y --no-install-recommends build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Debian 11 repositories validated'"

  debian-12:
    base-image: debian:12
    package-manager: apt
    sources:
      - "deb ${DEBIAN_BASE}${DEBIAN_PATH} bookworm main contrib non-free non-free-firmware"
      - "deb ${DEBIAN_BASE}${DEBIAN_PATH} bookworm-updates main contrib non-free non-free-firmware"
      - "deb ${DEBIAN_BASE}${DEBIAN_PATH} bookworm-backports main contrib non-free non-free-firmware"
    test-commands:
      - "apt-get install -y --no-install-recommends apt-utils"
      - "apt-get install -y --no-install-recommends build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Debian 12 repositories validated'"

  # ----------------------------------------------------------------------------
  # Rocky Linux Distributions
  # ----------------------------------------------------------------------------

  rocky-8:
    base-image: rockylinux:8
    package-manager: dnf
    sources:
      - |
        [baseos]
        name=Rocky Linux $releasever - BaseOS
        baseurl=${ROCKY_BASE}/rocky/$releasever/BaseOS/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}

        [appstream]
        name=Rocky Linux $releasever - AppStream
        baseurl=${ROCKY_BASE}/rocky/$releasever/AppStream/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}

        [extras]
        name=Rocky Linux $releasever - Extras
        baseurl=${ROCKY_BASE}/rocky/$releasever/extras/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}

        [powertools]
        name=Rocky Linux $releasever - PowerTools
        baseurl=${ROCKY_BASE}/rocky/$releasever/PowerTools/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}
    test-commands:
      - "dnf install -y dnf-utils"
      - "dnf install -y gcc make"
      - "gcc --version"
      - "echo '[SUCCESS] Rocky Linux 8 repositories validated'"

  rocky-9:
    base-image: rockylinux:9
    package-manager: dnf
    sources:
      - |
        [baseos]
        name=Rocky Linux $releasever - BaseOS
        baseurl=${ROCKY_BASE}/rocky/$releasever/BaseOS/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}

        [appstream]
        name=Rocky Linux $releasever - AppStream
        baseurl=${ROCKY_BASE}/rocky/$releasever/AppStream/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}

        [extras]
        name=Rocky Linux $releasever - Extras
        baseurl=${ROCKY_BASE}/rocky/$releasever/extras/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}

        [crb]
        name=Rocky Linux $releasever - CRB
        baseurl=${ROCKY_BASE}/rocky/$releasever/CRB/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}
    test-commands:
      - "dnf install -y dnf-utils"
      - "dnf install -y gcc make"
      - "gcc --version"
      - "echo '[SUCCESS] Rocky Linux 9 repositories validated'"

  rocky-10:
    base-image: rockylinux:10
    package-manager: dnf
    sources:
      - |
        [baseos]
        name=Rocky Linux $releasever - BaseOS
        baseurl=${ROCKY_BASE}/rocky/$releasever/BaseOS/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}

        [appstream]
        name=Rocky Linux $releasever - AppStream
        baseurl=${ROCKY_BASE}/rocky/$releasever/AppStream/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}

        [extras]
        name=Rocky Linux $releasever - Extras
        baseurl=${ROCKY_BASE}/rocky/$releasever/extras/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}

        [crb]
        name=Rocky Linux $releasever - CRB
        baseurl=${ROCKY_BASE}/rocky/$releasever/CRB/$basearch/os/
        enabled=1
        gpgcheck=${GPG_CHECK}
    test-commands:
      - "dnf install -y dnf-utils"
      - "dnf install -y gcc make"
      - "gcc --version"
      - "echo '[SUCCESS] Rocky Linux 10 repositories validated'"

  # ----------------------------------------------------------------------------
  # Ubuntu Distributions
  # ----------------------------------------------------------------------------

  ubuntu-12:
    base-image: ubuntu:12.04
    package-manager: apt
    sources:
      - "deb ${UBUNTU_OLD_BASE}${UBUNTU_PATH} precise main restricted universe multiverse"
      - "deb ${UBUNTU_OLD_BASE}${UBUNTU_PATH} precise-updates main restricted universe multiverse"
      - "deb ${UBUNTU_OLD_BASE}${UBUNTU_PATH} precise-backports main restricted universe multiverse"
      - "deb ${UBUNTU_OLD_BASE}${UBUNTU_PATH} precise-security main restricted universe multiverse"
    test-commands:
      - "apt-get install -y --no-install-recommends apt-utils"
      - "apt-get install -y --no-install-recommends build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Ubuntu 12.04 repositories validated'"

  ubuntu-15:
    base-image: ubuntu:15.04
    package-manager: apt
    sources:
      - "deb ${UBUNTU_OLD_BASE}${UBUNTU_PATH} vivid main restricted universe multiverse"
      - "deb ${UBUNTU_OLD_BASE}${UBUNTU_PATH} vivid-updates main restricted universe multiverse"
      - "deb ${UBUNTU_OLD_BASE}${UBUNTU_PATH} vivid-backports main restricted universe multiverse"
      - "deb ${UBUNTU_OLD_BASE}${UBUNTU_PATH} vivid-security main restricted universe multiverse"
    test-commands:
      - "apt-get install -y --no-install-recommends apt-utils"
      - "apt-get install -y --no-install-recommends build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Ubuntu 15.04 repositories validated'"

  ubuntu-20:
    base-image: ubuntu:20.04
    package-manager: apt
    sources:
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} focal main restricted universe multiverse"
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} focal-updates main restricted universe multiverse"
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} focal-backports main restricted universe multiverse"
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} focal-security main restricted universe multiverse"
    test-commands:
      - "apt-get install -y --no-install-recommends apt-utils"
      - "apt-get install -y --no-install-recommends build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Ubuntu 20.04 repositories validated'"

  ubuntu-22:
    base-image: ubuntu:22.04
    package-manager: apt
    sources:
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} jammy main restricted universe multiverse"
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} jammy-updates main restricted universe multiverse"
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} jammy-backports main restricted universe multiverse"
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} jammy-security main restricted universe multiverse"
    test-commands:
      - "apt-get install -y --no-install-recommends apt-utils"
      - "apt-get install -y --no-install-recommends build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Ubuntu 22.04 repositories validated'"

  ubuntu-24:
    base-image: ubuntu:24.04
    package-manager: apt
    sources:
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} noble main restricted universe multiverse"
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} noble-updates main restricted universe multiverse"
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} noble-backports main restricted universe multiverse"
      - "deb ${UBUNTU_BASE}${UBUNTU_PATH} noble-security main restricted universe multiverse"
    test-commands:
      - "apt-get install -y --no-install-recommends apt-utils"
      - "apt-get install -y --no-install-recommends build-essential"
      - "gcc --version"
      - "echo '[SUCCESS] Ubuntu 24.04 repositories validated'"